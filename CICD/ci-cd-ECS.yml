name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test_suite:
    runs-on: ubuntu-latest
    environment: flask-testing
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v2
    - name: Set Up Python3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd src
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Tests
      env:
        FLASK_ENV: ${{ secrets.FLASK_ENV }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      run: |
        cd src
        python -m unittest discover -s tests/ -v
    - name: Style Check
      run: |
        cd src
        flake8 .
  deployment:
    needs: test_suite
    runs-on: ubuntu-latest
    environment: flask-deploy
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR and refresh ECS cluster service
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mylocale
          IMAGE_TAG: latest
        run: | 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          aws ecs update-service --cluster mylocale-cluster1 --service mylocale-app --force-new-deployment
